// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["relationJoins"]
}

datasource db {
    provider          = "postgresql"
    url               = env("DATABASE_URL")
    directUrl         = env("DIRECT_URL")
}

model User {
    id        String   @id @default(cuid())
    email     String   @unique
    name      String?
    firstName String?
    lastName  String?
    password  String?
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    profileImage String?
    kindeAuthId String?
    customer_id String?
    userTags UserTag[]
    invoices Invoice[]
}

model Customers {
    id        String   @id @default(cuid())
    name      String?
    email     String?
    image_url String?
    updated_at DateTime @updatedAt
    created_at DateTime @default(now())
    Invoice Invoice[]
}

model Invoice {
    id        String   @id @default(cuid())
    amount    Float?
    customer Customers @relation(fields: [customer_id], references: [id])
    customer_id String
    userId String
    user User @relation(fields: [userId], references: [id])
    status String?
    currency String?
    updated_at DateTime @updatedAt
    created_at DateTime @default(now())
    isArchived Boolean?
    files File[]
    created_by String?
    invoice_name String?
    invoice_date DateTime?
    invoice_number Int? @default(autoincrement())
    invoice_tags InvoiceTag[]
    shop Shop? @relation(fields: [shopId], references: [id]) // Made shop optional
    shopId String?
    image_url String?
}

model InvoiceTag {
    id        String   @id @default(cuid())
    name      String
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    invoice Invoice @relation(fields: [invoiceId], references: [id])
    invoiceId String
}

model File {
    id        String   @id @default(cuid())
    url       String
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    metadata String?
    invoice Invoice @relation(fields: [invoiceId], references: [id])
    invoiceId String
    isArchived Boolean? @default(false)
}

model UserTag {
    id        String   @id @default(cuid())
    name      String
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    user User @relation(fields: [userId], references: [id])
    userId String
}

model Revenue {
    id        String   @id @default(cuid())
    month String?
    revenue Int?
}

model Shop {
    id        String   @id @default(cuid())
    name      String
    email     String?
    image_url String?
    updated_at DateTime @updatedAt
    created_at DateTime @default(now())
    invoices Invoice[]
}

